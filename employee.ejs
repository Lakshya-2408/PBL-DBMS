<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Employees - Employee Management System</title>
    <style>
        /* Global Styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background-color: #f5f7fa;
            color: #333;
            line-height: 1.6;
        }
        
        .container {
            width: 100%;
            max-width: 1400px;
            margin: 0 auto;
            padding: 0 20px;
        }
        
        /* Header Styles */
        header {
            background-color: #2c3e50;
            color: white;
            padding: 1rem 0;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }
        
        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .logo {
            font-size: 1.8rem;
            font-weight: 700;
        }
        
        .logo span {
            color: #3498db;
        }
        
        nav ul {
            display: flex;
            list-style: none;
        }
        
        nav ul li {
            margin-left: 1.5rem;
        }
        
        nav ul li a {
            color: white;
            text-decoration: none;
            font-weight: 500;
            transition: color 0.3s;
        }
        
        nav ul li a:hover {
            color: #3498db;
        }
        
        /* Page Header */
        .page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin: 2rem 0;
        }
        
        .page-title {
            color: #2c3e50;
            font-size: 1.8rem;
        }
        
        .back-btn {
            background: #95a5a6;
            color: white;
            border: none;
            border-radius: 4px;
            padding: 0.6rem 1.2rem;
            font-size: 0.9rem;
            font-weight: 600;
            cursor: pointer;
            transition: background 0.3s;
            text-decoration: none;
            display: inline-block;
        }
        
        .back-btn:hover {
            background: #7f8c8d;
        }
        
        /* Search and Filter Section */
        .search-section {
            background: white;
            border-radius: 8px;
            box-shadow: 0 3px 10px rgba(0,0,0,0.08);
            padding: 1.5rem;
            margin-bottom: 2rem;
        }
        
        .search-row {
            display: flex;
            gap: 1rem;
            margin-bottom: 1rem;
            flex-wrap: wrap;
        }
        
        .search-group {
            flex: 1;
            min-width: 200px;
        }
        
        .search-group label {
            display: block;
            margin-bottom: 0.5rem;
            color: #2c3e50;
            font-weight: 500;
            font-size: 0.9rem;
        }
        
        .search-group input,
        .search-group select {
            width: 100%;
            padding: 0.6rem;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 0.9rem;
        }
        
        .search-actions {
            display: flex;
            gap: 1rem;
            justify-content: flex-end;
        }
        
        .btn {
            padding: 0.6rem 1.2rem;
            border: none;
            border-radius: 4px;
            font-size: 0.9rem;
            font-weight: 600;
            cursor: pointer;
            transition: background 0.3s;
        }
        
        .btn-primary {
            background: #3498db;
            color: white;
        }
        
        .btn-primary:hover {
            background: #2980b9;
        }
        
        .btn-secondary {
            background: #95a5a6;
            color: white;
        }
        
        .btn-secondary:hover {
            background: #7f8c8d;
        }
        
        /* Employees Table */
        .employees-section {
            background: white;
            border-radius: 8px;
            box-shadow: 0 3px 10px rgba(0,0,0,0.08);
            padding: 1.5rem;
            margin-bottom: 2rem;
            overflow-x: auto;
        }
        
        .table-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
        }
        
        .section-title {
            color: #2c3e50;
            font-size: 1.3rem;
        }
        
        .total-employees {
            color: #7f8c8d;
            font-size: 0.9rem;
        }
        
        table {
            width: 100%;
            border-collapse: collapse;
        }
        
        th, td {
            padding: 1rem;
            text-align: left;
            border-bottom: 1px solid #ecf0f1;
        }
        
        th {
            background-color: #f8f9fa;
            color: #2c3e50;
            font-weight: 600;
        }
        
        tr:hover {
            background-color: #f8f9fa;
        }
        
        .status-badge {
            padding: 0.3rem 0.6rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
        }
        
        .status-active {
            background: #d4edda;
            color: #155724;
        }
        
        .status-inactive {
            background: #f8d7da;
            color: #721c24;
        }
        
        .action-buttons {
            display: flex;
            gap: 0.5rem;
        }
        
        .btn-edit {
            background: #3498db;
            color: white;
            border: none;
            border-radius: 4px;
            padding: 0.4rem 0.8rem;
            font-size: 0.8rem;
            cursor: pointer;
        }
        
        .btn-edit:hover {
            background: #2980b9;
        }
        
        .btn-delete {
            background: #e74c3c;
            color: white;
            border: none;
            border-radius: 4px;
            padding: 0.4rem 0.8rem;
            font-size: 0.8rem;
            cursor: pointer;
        }
        
        .btn-delete:hover {
            background: #c0392b;
        }
        
        /* Loading and Messages */
        .loading-message {
            text-align: center;
            padding: 2rem;
            color: #7f8c8d;
        }
        
        .error-message {
            background: #f8d7da;
            color: #721c24;
            padding: 1rem;
            border-radius: 4px;
            margin-bottom: 1rem;
            display: none;
        }
        
        .no-data {
            text-align: center;
            padding: 2rem;
            color: #7f8c8d;
        }
        
        /* Footer */
        footer {
            background: #2c3e50;
            color: white;
            padding: 2rem 0;
            text-align: center;
            margin-top: 2rem;
        }
        
        .footer-links {
            display: flex;
            justify-content: center;
            gap: 2rem;
            margin-top: 1.5rem;
            flex-wrap: wrap;
        }
        
        .footer-links a {
            color: #ecf0f1;
            text-decoration: none;
            transition: color 0.3s;
        }
        
        .footer-links a:hover {
            color: #3498db;
        }
        
        /* Responsive */
        @media (max-width: 768px) {
            .header-content {
                flex-direction: column;
                text-align: center;
            }
            
            nav ul {
                margin-top: 1rem;
            }
            
            .page-header {
                flex-direction: column;
                gap: 1rem;
                align-items: flex-start;
            }
            
            .search-row {
                flex-direction: column;
            }
            
            table {
                font-size: 0.8rem;
            }
            
            th, td {
                padding: 0.5rem;
            }
        }
    </style>
</head>
<body>
    <header>
        <div class="container header-content">
            <div class="logo">Employee<span>Manage</span></div>
            <nav>
                <ul>
                    <li><a href="/admin">Dashboard</a></li>
                    <li><a href="/employees" class="active">Employees</a></li>
                    <li><a href="/applications">Job Applications</a></li>
                    <li><a href="/">Logout</a></li>
                </ul>
            </nav>
        </div>
    </header>

    <main class="dashboard">
        <div class="container">
            <div class="page-header">
                <h1 class="page-title">Employee Management</h1>
                <a href="/admin" class="back-btn">‚Üê Back to Dashboard</a>
            </div>
            
            <div class="error-message" id="errorMessage"></div>
            
            <div class="search-section">
                <div class="search-row">
                    <div class="search-group">
                        <label for="searchName">Search by Name</label>
                        <input type="text" id="searchName" placeholder="Enter employee name">
                    </div>
                    <div class="search-group">
                        <label for="searchDepartment">Department</label>
                        <select id="searchDepartment">
                            <option value="">All Departments</option>
                            <option value="hr">Human Resources</option>
                            <option value="it">Information Technology</option>
                            <option value="finance">Finance</option>
                            <option value="marketing">Marketing</option>
                            <option value="sales">Sales</option>
                            <option value="operations">Operations</option>
                        </select>
                    </div>
                    <div class="search-group">
                        <label for="searchPosition">Position</label>
                        <input type="text" id="searchPosition" placeholder="Enter position">
                    </div>
                </div>
                <div class="search-actions">
                    <button class="btn btn-secondary" id="resetSearch">Reset</button>
                    <button class="btn btn-primary" id="applySearch">Search</button>
                </div>
            </div>
            
            <div class="employees-section">
                <div class="table-header">
                    <h2 class="section-title">All Employees</h2>
                    <div class="total-employees" id="totalEmployees">Loading...</div>
                </div>
                
                <div class="loading-message" id="loadingMessage">Loading employees...</div>
                
                <div id="employeesTable" style="display: none;">
                    <table>
                        <thead>
                            <tr>
                                <th>Employee ID</th>
                                <th>Name</th>
                                <th>Email</th>
                                <th>Department</th>
                                <th>Position</th>
                                <th>Employment Type</th>
                                <th>Start Date</th>
                                <th>Salary</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="employeesTableBody">
                        </tbody>
                    </table>
                </div>
                
                <div class="no-data" id="noDataMessage" style="display: none;">
                    No employees found matching your criteria.
                </div>
            </div>
        </div>
    </main>

    <footer>
        <div class="container">
            <p>&copy; 2025 Employee Management System. All rights reserved.</p>
            <div class="footer-links">
                <a href="#privacy">Privacy Policy</a>
                <a href="#terms">Terms of Service</a>
                <a href="#support">Support</a>
                <a href="#contact">Contact Us</a>
            </div>
        </div>
    </footer>

    <script>
        let allEmployees = [];
        
        document.addEventListener('DOMContentLoaded', function() {
            loadEmployees();
            
            // Search functionality
            document.getElementById('applySearch').addEventListener('click', filterEmployees);
            document.getElementById('resetSearch').addEventListener('click', resetSearch);
            
            // Enter key support for search
            document.getElementById('searchName').addEventListener('keypress', function(e) {
                if (e.key === 'Enter') filterEmployees();
            });
            document.getElementById('searchPosition').addEventListener('keypress', function(e) {
                if (e.key === 'Enter') filterEmployees();
            });
        });
        
        async function loadEmployees() {
            showLoading(true);
            
            try {
                const response = await fetch('/api/employees');
                const result = await response.json();
                
                if (result.success) {
                    allEmployees = result.employees;
                    displayEmployees(allEmployees);
                } else {
                    throw new Error(result.message || 'Failed to load employees');
                }
            } catch (error) {
                showError('Error loading employees: ' + error.message);
            } finally {
                showLoading(false);
            }
        }
        
        function displayEmployees(employees) {
            const tableBody = document.getElementById('employeesTableBody');
            const totalElement = document.getElementById('totalEmployees');
            const tableElement = document.getElementById('employeesTable');
            const noDataElement = document.getElementById('noDataMessage');
            
            tableBody.innerHTML = '';
            totalElement.textContent = `${employees.length} employees found`;
            
            if (employees.length === 0) {
                tableElement.style.display = 'none';
                noDataElement.style.display = 'block';
                return;
            }
            
            tableElement.style.display = 'block';
            noDataElement.style.display = 'none';
            
            employees.forEach(employee => {
                const row = document.createElement('tr');
                
                const status = calculateEmployeeStatus(employee);
                
                row.innerHTML = `
                    <td>${employee.employee_id}</td>
                    <td>${employee.first_name} ${employee.last_name}</td>
                    <td>${employee.email}</td>
                    <td>${formatDepartment(employee.department)}</td>
                    <td>${employee.position}</td>
                    <td>${formatEmploymentType(employee.employment_type)}</td>
                    <td>${formatDate(employee.start_date)}</td>
                    <td>${employee.salary ? '$' + employee.salary : 'N/A'}</td>
                    <td>
                        <span class="status-badge ${status === 'Active' ? 'status-active' : 'status-inactive'}">
                            ${status}
                        </span>
                    </td>
                    <td>
                        <div class="action-buttons">
                            <button class="btn-edit" onclick="editEmployee(${employee.id})">Edit</button>
                            <button class="btn-delete" onclick="deleteEmployee(${employee.id})">Delete</button>
                        </div>
                    </td>
                `;
                
                tableBody.appendChild(row);
            });
        }
        
        function filterEmployees() {
            const nameFilter = document.getElementById('searchName').value.toLowerCase();
            const departmentFilter = document.getElementById('searchDepartment').value;
            const positionFilter = document.getElementById('searchPosition').value.toLowerCase();
            
            const filteredEmployees = allEmployees.filter(employee => {
                const fullName = `${employee.first_name} ${employee.last_name}`.toLowerCase();
                const matchesName = !nameFilter || fullName.includes(nameFilter);
                const matchesDepartment = !departmentFilter || employee.department === departmentFilter;
                const matchesPosition = !positionFilter || employee.position.toLowerCase().includes(positionFilter);
                
                return matchesName && matchesDepartment && matchesPosition;
            });
            
            displayEmployees(filteredEmployees);
        }
        
        function resetSearch() {
            document.getElementById('searchName').value = '';
            document.getElementById('searchDepartment').value = '';
            document.getElementById('searchPosition').value = '';
            displayEmployees(allEmployees);
        }
        
        function calculateEmployeeStatus(employee) {
            return employee.employment_type !== 'intern' ? 'Active' : 'Intern';
        }
        
        function formatDepartment(dept) {
            const departmentMap = {
                'hr': 'Human Resources',
                'it': 'Information Technology',
                'finance': 'Finance',
                'marketing': 'Marketing',
                'sales': 'Sales',
                'operations': 'Operations'
            };
            return departmentMap[dept] || dept;
        }
        
        function formatEmploymentType(type) {
            return type.split('-').map(word => 
                word.charAt(0).toUpperCase() + word.slice(1)
            ).join(' ');
        }
        
        function formatDate(dateString) {
            if (!dateString) return 'N/A';
            const date = new Date(dateString);
            return date.toLocaleDateString();
        }
        
        function editEmployee(employeeId) {
            window.location.href = `/edit-employee/${employeeId}`;
        }
        
        function deleteEmployee(employeeId) {
            if (confirm('Are you sure you want to delete this employee?')) {
                fetch(`/api/employees/${employeeId}`, {
                    method: 'DELETE'
                })
                .then(response => response.json())
                .then(result => {
                    if (result.success) {
                        alert('Employee deleted successfully');
                        loadEmployees();
                    } else {
                        alert('Error deleting employee: ' + result.message);
                    }
                })
                .catch(error => {
                    alert('Error deleting employee: ' + error.message);
                });
            }
        }
        
        function showLoading(show) {
            document.getElementById('loadingMessage').style.display = show ? 'block' : 'none';
            document.getElementById('employeesTable').style.display = show ? 'none' : 'block';
        }
        
        function showError(message) {
            const errorElement = document.getElementById('errorMessage');
            errorElement.textContent = message;
            errorElement.style.display = 'block';
            setTimeout(() => {
                errorElement.style.display = 'none';
            }, 5000);
        }
    </script>
</body>
</html>